#!/usr/bin/env perl
use Mojolicious::Lite;

get '/' => sub {
  my $self = shift;
  $self->render('index');
};

app->start;
__DATA__

@@ index.html.ep
<!DOCTYPE html>
<html>
  <head><title>Raspberry Pi</title></head>
  <body>
<p>In this screen shot we connected a Windows desktop behind NAT to
a Linux desktop (i.e. a Raspberry Pi) also behind NAT by using nothing more
than a modern web browser on the Windows computer.  No plugins.  No fancy tricks. 
It just worked.  It's one of the most amazing things I've seen.  As you can see from the attached screenshot,
the Linux VNC
server session was accessible in a modern web browser's HTML5 canvas.  The
web browser merely needed to access the iwebpp.io web server (which is open
source) listening on port
51688 in the cloud which connects the session with the Linux VNC server's session. 
We can set up any number of X servers on a single Pi and any number of users
can connect to and control a single session simultaneously.</p>

<p>The plan is to create a Kloud interface that will allow a technician to
start up a new X session and connect it with iwebpp.io software in our Kloud and then
present the dynamic link to the technician's browser to be clicked on and
gain access to the Pi's X session.  From there, of course, the sky's the
limit.  In the screenshot, I have a calculator running.  Of course I could
just as easily launch a terminal or wireshark, rdesktop/vnc, or a web
browser.  And with a 4G interface and on a mediocre UPS, we'll be able to
have eyes on the network at any time under any conditions and with little
effort on the technician's part.  Long-term, we aim to create a browser
plugin for KMS that would give technicians access to this interface from
within KMS itself.</p>
    <img src="/img/ss.png" />
  </body>
</html>
